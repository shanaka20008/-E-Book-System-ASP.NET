@model IEnumerable<FindMyBook.Models.SalesReportViewModel>
@{
    ViewBag.Title = "Sales Report";
    Layout = "~/Views/Shared/_Admin_Dashboard_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h2 class="text-primary">Sales Report</h2>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">Filters</h5>
        </div>
        <div class="card-body">
            <form method="get" action="@Url.Action("SalesReport")">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="startDate">Start Date</label>
                            <input type="date" id="startDate" name="startDate" class="form-control" value="@Request["startDate"]" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="endDate">End Date</label>
                            <input type="date" id="endDate" name="endDate" class="form-control" value="@Request["endDate"]" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="bookName">Book Name</label>
                            <input type="text" id="bookName" name="bookName" class="form-control" placeholder="Search by book name" value="@Request["bookName"]" />
                        </div>
                    </div>
                    <div class="col-12 mt-3">
                        <button type="submit" class="btn btn-primary">Apply Filters</button>
                        <a href="@Url.Action("SalesReport")" class="btn btn-secondary">Reset</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Chart Section -->
    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">Sales Analytics</h5>
        </div>
        <div class="card-body">
            <canvas id="salesChart" height="100"></canvas>
        </div>
    </div>

    <!-- Data Table -->
    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">Sales Details</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="bg-light">
                        <tr>
                            <th>Order ID</th>
                            <th>Order Date</th>
                            <th>Book Name</th>
                            <th>Book Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.OrderId</td>
                                <td>@item.OrderDate.ToShortDateString()</td>
                                <td>@item.BookName</td>
                                <td>@item.BookPrice.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const salesCtx = document.getElementById('salesChart').getContext('2d');
    new Chart(salesCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Encode(Model.Select(m => m.BookName))),
            datasets: [{
                label: 'Sales Price',
                data: @Html.Raw(Json.Encode(Model.Select(m => m.BookPrice))),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>